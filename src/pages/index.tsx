import Canvas from "@/components/Canvas";
import { Disclosure } from "@headlessui/react";
import Head from "next/head";
import React from "react";
// import { Inter } from "next/font/google";

export default function Home() {
  const [mediaText, setMediaText] = React.useState("MEDIAGENZ");
  const [caption, setCaption] = React.useState(
    `Postingan Media "Kekinian"\n Modal Background Putih\n Dan Text Hitam, \nBut Almost \nAny Gen Z Fall For It ðŸ˜†`
  );
  const [mediaPosition, setMediaPosition] = React.useState("tr");
  const [captionControl, setCaptionControl] = React.useState({
    align: "center",
    topOffset: 0,
    maxWidth: 480,
  });
  const [colorMode, setColorMode] = React.useState("light");

  return (
    <>
      <Head>
        <title>Postingan Media Gen Z</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="h-full max-w-lg mx-auto py-4 px-4 shadow-lg flex flex-col space-y-2">
        <div className="flex gap-x-4">
          <div
            className="w-1/2
          "
          >
            <label
              htmlFor="media"
              className="block text-sm font-medium leading-6 text-gray-900"
            >
              Media
            </label>
            <div className="mt-2">
              <input
                id="media"
                name="media"
                className="w-full px-2 py-2 rounded-md border-gray-400 border"
                placeholder="ICKWR"
                onChange={(e) => setMediaText(e.target.value)}
              />
            </div>
          </div>
          <div className="w-1/2">
            <label
              htmlFor="mediaPosition"
              className="block text-sm font-medium leading-6 text-gray-900"
            >
              Media Position
            </label>
            <select
              id="mediaPosition"
              className="mt-2 w-full px-2 py-2 rounded-md border-gray-400 border"
              defaultValue={"tr"}
              onChange={(e) => {
                setMediaPosition(e.target.value);
              }}
            >
              <option value={""}>Pilih posisi</option>
              <option value="tl">Atas Kiri</option>
              <option value="tr">Atas Kanan</option>
              <option value="bl">Bawah Kiri</option>
              <option value="br">Bawah Kanan</option>
            </select>
          </div>
        </div>
        <div>
          <label
            htmlFor="caption"
            className="block text-sm font-medium leading-6 text-gray-900"
          >
            Caption
          </label>
          <div className="mt-2">
            <textarea
              id="caption"
              name="caption"
              rows={4}
              className="w-full px-2 py-2 rounded-md border-gray-400 border"
              placeholder="kulkas LG 2 pintu minat inbok"
              defaultValue={""}
              onChange={(e) => setCaption(e.target.value)}
            />
          </div>
        </div>
        <Disclosure>
          {({ open }) => (
            <>
              <Disclosure.Button className="text-sm w-full px-2 py-2 rounded-md border-gray-400 border flex justify-between items-center">
                <label className="block text-sm font-medium leading-6 text-gray-900">
                  Options
                </label>
                <svg
                  fill="none"
                  stroke="currentColor"
                  strokeWidth={1.5}
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                  aria-hidden="true"
                  className={`w-4 h-4 ${open ? "transform rotate-180" : ""}`}
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M19.5 8.25l-7.5 7.5-7.5-7.5"
                  />
                </svg>
              </Disclosure.Button>
              <Disclosure.Panel className="text-gray-500">
                <div className="grid grid-cols-4 gap-x-2">
                  <div className="">
                    <label
                      htmlFor="align"
                      className="block text-sm font-medium leading-6 text-gray-900"
                    >
                      Caption Align
                    </label>
                    <div className="mt-2">
                      <select
                        id="mediaPosition"
                        className="w-full px-2 py-2 rounded-md border-gray-400 border"
                        defaultValue={"center"}
                        onChange={(e) => {
                          setCaptionControl({
                            ...captionControl,
                            align: e.target.value,
                          });
                        }}
                      >
                        <option value={""}>Pilih align</option>
                        <option value="left">Left</option>
                        <option value="right">Right</option>
                        <option value="center">Center</option>
                      </select>
                    </div>
                  </div>
                  <div className="">
                    <label
                      htmlFor="topOffset"
                      className="block text-sm font-medium leading-6 text-gray-900"
                    >
                      Top Offset
                    </label>
                    <div className="mt-2">
                      <input
                        id="topOffset"
                        name="topOffset"
                        className="w-full px-2 py-2 rounded-md border-gray-400 border"
                        placeholder="0"
                        value={captionControl.topOffset}
                        onChange={(e) =>
                          setCaptionControl({
                            ...captionControl,
                            topOffset: parseInt(e.target.value),
                          })
                        }
                        type="number"
                      />
                    </div>
                  </div>
                  <div className="">
                    <label
                      htmlFor="maxWidth"
                      className="block text-sm font-medium leading-6 text-gray-900"
                    >
                      Max Width
                    </label>
                    <div className="mt-2">
                      <input
                        id="maxWidth"
                        name="maxWidth"
                        className="w-full px-2 py-2 rounded-md border-gray-400 border"
                        placeholder="480"
                        defaultValue={"480"}
                        onChange={(e) =>
                          setCaptionControl({
                            ...captionControl,
                            maxWidth: parseInt(e.target.value),
                          })
                        }
                        type="number"
                      />
                    </div>
                  </div>
                  <div className="">
                    <label
                      htmlFor="colorMode"
                      className="block text-sm font-medium leading-6 text-gray-900"
                    >
                      Color Mode
                    </label>
                    <select
                      id="colorMode"
                      className="w-full px-2 py-2 rounded-md border-gray-400 border mt-2"
                      defaultValue={colorMode}
                      onChange={(e) => {
                        setColorMode(e.target.value);
                      }}
                    >
                      <option value={""}>Pilih color mode</option>
                      <option value="light">Light</option>
                      <option value="dark">Dark</option>
                    </select>
                  </div>
                </div>
              </Disclosure.Panel>
            </>
          )}
        </Disclosure>

        <div className="">
          <Canvas
            mediaText={mediaText}
            caption={caption}
            mediaPosition={mediaPosition}
            captionControl={captionControl}
            colorMode={colorMode}
          />
        </div>
      </div>
    </>
  );
}
